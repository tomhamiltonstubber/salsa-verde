"""
Django settings for salsaverde project.

Generated by 'django-admin startproject' using Django 2.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

DJ_DIR = os.path.dirname(__file__)
BASE_DIR = os.path.dirname(DJ_DIR)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'r1chysd-n#p8rb)#e*0)mt66+5*1qcmian=3$j)@^6dpj8=ck(')


DEBUG = os.getenv('DEBUG', True)
LIVE = os.getenv('LIVE')

ALLOWED_HOSTS = ['*']
INTERNAL_IPS = ['127.0.0.1', 'localhost']

# Application definition
INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'bootstrapform_jinja',
    'storages',
    'bootstrap3_datetime',
    'debug_toolbar',
    'raven.contrib.django.raven_compat',
    'SalsaVerde.main',
    'SalsaVerde.orders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'SalsaVerde.main.middleware.AuthRequiredMiddleware',
]

ROOT_URLCONF = 'SalsaVerde.urls'

TEMPLATES = [
    {
        "BACKEND": "django_jinja.backend.Jinja2",
        "APP_DIRS": True,
        'DIRS': ['templates'],
        "OPTIONS": {"match_extension": ".jinja"},
    },
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'SalsaVerde.wsgi.application'

if LIVE:
    RAVEN_CONFIG = {
        'dsn': 'https://e9dedecf18764f1392e959d1badcfa38:5a57928068164499befd72e7bfb78492@sentry.io/1277127',
        'release': os.getenv('HEROKU_SLUG_COMMIT', '-'),
    }

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

if LIVE:
    import dj_database_url

    DATABASES = {'default': dj_database_url.config()}
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'salsaverde',
            'USER': os.getenv('PGUSER', 'postgres'),
            'PASSWORD': os.getenv('PGPASSWORD', 'waffle'),
            'HOST': os.getenv('PGHOST', 'localhost'),
            'PORT': os.getenv('PGPORT', '5432'),
        }
    }


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True
DT_FORMAT = '%d/%m/%Y %H:%M'
DATE_FORMAT = '%d/%m/%Y'

AUTH_USER_MODEL = 'main.User'

# Storage

STATIC_ROOT = 'staticfiles'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
STATIC_URL = '/static/'

AWS_PRIVATE_MEDIA_LOCATION = 'media/private'

if LIVE:
    AWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')
    AWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')
    AWS_STORAGE_BUCKET_NAME = 'salsa-verde'
    AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME
    AWS_S3_OBJECT_PARAMETERS = {
        'CacheControl': 'max-age=86400',
    }
    AWS_STATIC_LOCATION = 'static'
else:
    MEDIA_ROOT = 'mediafiles'
    MEDIA_URL = '/media/'
    PUBLIC_URL = '/media/public/'


PRIVATE_FILE_STORAGE = 'main.storage_backends.PrivateMediaStorage'


# =======================================
# Shopify
# =======================================
SHOPIFY_API_KEY = os.getenv('SHOPIFY_API_KEY')
SHOPIFY_PASSWORD = os.getenv('SHOPIFY_PASSWORD')
SHOPIFY_SHARED_KEY = os.getenv('SHOPIFY_SHARED_KEY')
SHOPIFY_API_VERSION = os.getenv('SHOPIFY_API_VERSION', '2020-07')
SHOPIFY_BASE_URL = os.getenv(
    'SHOPIFY_BASE_URL', f'https://burren-balsamics.myshopify.com/admin/api/{SHOPIFY_API_VERSION}'
)

# =======================================
# ExpressFreight
# =======================================

EF_URL = os.getenv('EF_URL', 'https://online.expressfreight.co.uk:10813/api')
EF_USERNAME = os.getenv('EF_USERNAME', 'MANUALUSER')
EF_PASSWORD = os.getenv('EF_PASSWORD')
EF_CLIENT_ID = os.getenv('EF_CLIENT_ID', 'MANUALCLIENT')
EF_CLIENT_SECRET = os.getenv('EF_CLIENT_SECRET')

try:
    from localsettings import *  # noqa
except ImportError:
    pass
